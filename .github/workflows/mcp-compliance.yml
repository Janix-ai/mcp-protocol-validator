name: MCP Compliance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      server_url:
        description: 'URL of the MCP server to test'
        required: false
        default: 'http://localhost:8080'
      test_modules:
        description: 'Comma-separated list of test modules to run (base,resources,tools,prompts,utilities)'
        required: false
        default: 'base,resources,tools,prompts,utilities'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and test MCP validator

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mcp-protocol-validator/requirements.txt

      - name: Build Docker image
        run: |
          docker build -t mcp-protocol-validator mcp-protocol-validator

      - name: Start test server (if provided)
        if: ${{ github.event.inputs.server_command != '' }}
        run: |
          ${{ github.event.inputs.server_command }} &
          # Wait for server to start
          sleep 5

      - name: Run server tests
        env:
          MCP_SERVER_URL: ${{ github.event.inputs.server_url || 'http://localhost:8080' }}
        run: |
          cd mcp-protocol-validator
          python mcp_validator.py test \
            --url $MCP_SERVER_URL \
            --test-modules ${{ github.event.inputs.test_modules || 'base,resources,tools,prompts,utilities' }} \
            --report mcp-compliance-report.html

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: mcp-compliance-report
          path: mcp-protocol-validator/mcp-compliance-report.html
          if-no-files-found: warn

  docker:
    runs-on: ubuntu-latest
    needs: build
    name: Build and push Docker image
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./mcp-protocol-validator
          push: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME || 'local' }}/mcp-protocol-validator:latest 